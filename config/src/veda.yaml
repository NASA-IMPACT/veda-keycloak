---
enabled: true
realm: veda
displayName: Applications
displayNameHtml: VEDA Ecosystem

clients:
  - clientId: $(env:GRAFANA_CLIENT_ID)
    secret: $(env:GRAFANA_CLIENT_SECRET)
    name: Grafana
    rootUrl: https://d3art7u1htuei0.cloudfront.net
    enabled: true
    attributes: {}
    redirectUris:
      - https://d3art7u1htuei0.cloudfront.net/*
    webOrigins:
      - https://d3art7u1htuei0.cloudfront.net
    protocol: openid-connect
    fullScopeAllowed: true
    defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - basic
      - email
      - grafana:admin
      - grafana:editor
      - grafana:viewer
    publicClient: false

  - clientId: stac-api
    name: STAC API
    rootUrl: https://example.com
    enabled: true
    attributes: {}
    redirectUris:
      - https://example.com/*
    webOrigins:
      - https://example.com
    protocol: openid-connect
    fullScopeAllowed: true
    defaultClientScopes:
      - web-origins
      - acr
      - profile
      - roles
      - basic
      - email
      - stac:collection:create
      - stac:collection:update
      - stac:collection:delete
      - stac:item:create
      - stac:item:update
      - stac:item:delete

roles:
  client:
    grafana:
      - name: Administrator
        description: Grafana Administrator
      - name: Editor
        description: Grafana Editor
      - name: Viewer
        description: Grafana Viewer
    stac-api:
      - name: Administrator
        description: STAC Administrator
      - name: Editor
        description: STAC Editor

clientScopeMappings:
  grafana:
    - clientScope: grafana:admin
      roles:
        - Administrator
    - clientScope: grafana:editor
      roles:
        - Editor
    - clientScope: grafana:viewer
      roles:
        - Viewer

  stac-api:
    - clientScope: stac:collection:create
      roles:
        - Administrator
    - clientScope: stac:collection:delete
      roles:
        - Administrator
    - clientScope: stac:collection:update
      roles:
        - Administrator
        - Editor
    - clientScope: stac:item:create
      roles:
        - Administrator
        - Editor
    - clientScope: stac:item:update
      roles:
        - Administrator
        - Editor
    - clientScope: stac:item:delete
      roles:
        - Administrator
        - Editor

clientScopes:
  # Grafana
  - name: grafana:admin
    description: Admin access to Grafana
    protocol: openid-connect
  - name: grafana:editor
    description: Editor access to Grafana
    protocol: openid-connect
  - name: grafana:viewer
    description: Viewer access to Grafana
    protocol: openid-connect

  # STAC API
  - name: stac:collection:create
    description: Create a collection
    protocol: openid-connect
  - name: stac:collection:update
    description: Update a collection
    protocol: openid-connect
  - name: stac:collection:delete
    description: Delete a collection
    protocol: openid-connect
  - name: stac:item:create
    description: Create a new item
    protocol: openid-connect
  - name: stac:item:update
    description: Update an item
    protocol: openid-connect
  - name: stac:item:delete
    description: Delete an item
    protocol: openid-connect

groups:
  - name: System Administrators
    clientRoles:
      grafana:
        - Administrator
      stac-api:
        - Administrator

  - name: Developers
    clientRoles:
      grafana:
        - Editor
      stac-api:
        - Administrator

  - name: Data Editors
    clientRoles:
      grafana:
        - Viewer
      stac-api:
        - Editor

identityProviders:
  # CILogon
  - alias: cilogon # NOTE: this alias appears in the redirect_uri for the auth flow, update Github OAuth settings accordingly
    displayName: CILogon
    providerId: oidc
    enabled: true
    updateProfileFirstLoginMode: on
    trustEmail: false
    storeToken: false
    addReadTokenRoleOnCreate: false
    authenticateByDefault: false
    linkOnly: false
    config:
      userInfoUrl: "https://cilogon.org/oauth2/userinfo"
      validateSignature: "true"
      tokenUrl: "https://cilogon.org/oauth2/token"
      jwksUrl: "https://cilogon.org/oauth2/certs"
      issuer: "https://cilogon.org"
      useJwksUrl: "true"
      pkceEnabled: "false"
      metadataDescriptorUrl: "https://cilogon.org/.well-known/openid-configuration"
      authorizationUrl: "https://cilogon.org/authorize"
      clientAuthMethod: "client_secret_post"
      syncMode: "LEGACY"
      clientId: $(env:CILOGON_CLIENT_ID)
      clientSecret: $(env:CILOGON_CLIENT_SECRET)
